# docker-compose.yml
name: oli-cms

services:
  # Traefik: The reverse proxy
  traefik:
    image: "traefik:v3.5.0"
    container_name: "oli-cms-traefik"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/${ENVIRONMENT:-local}/:/etc/traefik/:ro"
    networks:
      - oli-cms-network
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3

  # Database: PostgreSQL
  database:
    image: postgres:16-alpine
    container_name: oli-cms-database
    environment:
      POSTGRES_DB: ${DB_DATABASE:-cms}
      POSTGRES_USER: ${DB_USERNAME:-cms_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - oli-cms-db-data:/var/lib/postgresql/data
    networks:
      - oli-cms-network
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache: Redis
  redis:
    image: redis:8.2.0-alpine3.22
    container_name: oli-cms-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - oli-cms-redis-data:/data
    networks:
      - oli-cms-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend: PHP Laravel
  backend:
    image: cms-backend:latest
    container_name: oli-cms-backend
    networks:
      - oli-cms-network
    environment:
      APP_NAME: ${APP_NAME:-OliCMS}
      APP_ENV: ${APP_ENV:-development}
      APP_DEBUG: ${APP_DEBUG:-false}
      APP_KEY: ${APP_KEY:-base64:SomeRandomKeyHere=}
      APP_URL: ${APP_URL:-http://localhost}
      SESSION_DRIVER: ${SESSION_DRIVER:-redis}
      DB_CONNECTION: ${DB_CONNECTION:-pgsql}
      DB_HOST: ${DB_HOST:-database}
      DB_PORT: ${DB_PORT:-5432}
      DB_DATABASE: ${DB_DATABASE:-cms}
      DB_USERNAME: ${DB_USERNAME:-cms_user}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MAIL_MAILER: ${MAIL_MAILER:-smtp}
      MAIL_HOST: ${MAIL_HOST:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_ENCRYPTION: ${MAIL_ENCRYPTION:-tls}
      MAIL_FROM_ADDRESS: ${MAIL_FROM_ADDRESS:-test@oli-cms.com}
      MAIL_FROM_NAME: ${MAIL_FROM_NAME:-"OliCMS"}
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api/`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # Frontend: next.js
  frontend:
    image: cms-frontend:latest
    container_name: oli-cms-frontend
    networks:
      - oli-cms-network
    environment:
      NODE_ENV: ${APP_ENV:-development}
      NEXT_PUBLIC_APP_NAME: ${APP_NAME:-OliCMS}
      NEXT_PUBLIC_API_URL: ${APP_URL:-http://oli-cms.test}/api
      TENANT_VALIDATION_API_URL: ${TENANT_VALIDATION_API_URL:-http://backend:8000/api/tenant}
    depends_on:
      backend:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`) && !PathPrefix(`/api`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

networks:
  oli-cms-network:
    driver: bridge

volumes:
  oli-cms-db-data:
    driver: local
  oli-cms-redis-data:
    driver: local
